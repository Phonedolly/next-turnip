import Head from 'next/head'
import styles from '@/styles/Home.module.scss'
import Card from '@/component/Card'
import Header from '@/component/Header'

import mongoose from 'mongoose';
const Category = require('@/schemas/category');
import Post from '@/schemas/post';

export default function Home(props) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header categories={props.categories} />
        <div className={styles.cardContainer}>
          <Card
            title="카드 테스트"
            thumbnail={undefined}
            url={"/post/"}
            postDate={"2022"}
            key={undefined}
            mode="curator"
          />
        </div>
      </main>
    </>
  )
}

export async function getStaticProps() {
  mongoose.set('strictQuery', false);
  await mongoose.connect(process.env.MONGODB_URI, { dbName: process.env.MONGODB_DBNAME, useNewUrlParser: true, })
    .then(result => console.log("connected to mongodb!"))
    .catch(err => console.error(err));

  const rawCategories = await Category.find({}).sort({ index: 1 });
  const lengths = await Promise.all(rawCategories.map(async (eachCategory) => {
    const value = (await Post.find({ category: { _id: eachCategory._id.toString() } })).length
    return value;
  }))

  const categories = (await rawCategories.map((eachCategory, i) => ({
    index: eachCategory.index,
    categoryName: eachCategory.categoryName,
    categoryURL: eachCategory.categoryURL,
    numsOfPosts: lengths[i]
  })));

  return {
    props: {
      categories,
    }
  }
}